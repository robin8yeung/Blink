apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.artifactory'


task sourcesJar(type: Jar) {
    from sourceSets.main.java
    archiveClassifier.set('sources')
}

artifactoryPublish.dependsOn('build')

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId POM_GROUP
            version POM_VERSION_NAME + (Boolean.valueOf(System.getProperty("snapshot")) ? "-SNAPSHOT" : "")
            artifactId POM_ARTIFACT_ID
            artifact "$buildDir/libs/${project.name}.jar"
            artifact sourcesJar

            pom.withXml {
                asNode().appendNode('description', POM_DESCRIPTION + ' Git commit:' + getGitSha())
                final depsNode = asNode().appendNode('dependencies')

                def compileDeps = configurations.api.getAllDependencies()
//                compileDeps += configurations.compile.getAllDependencies()

                def runtimeDeps = configurations.implementation.getAllDependencies()
                runtimeDeps -= compileDeps

                compileDeps.each {
                    def dependencyNode = depsNode.appendNode('dependency')
                    dependencyNode.appendNode('groupId', it.group)
                    dependencyNode.appendNode('artifactId', it.name)
                    dependencyNode.appendNode('version', it.version)
                    dependencyNode.appendNode('scope', "compile")
                }
                runtimeDeps.each {
                    def dependencyNode = depsNode.appendNode('dependency')
                    dependencyNode.appendNode('groupId', it.group)
                    dependencyNode.appendNode('artifactId', it.name)
                    dependencyNode.appendNode('version', it.version)
                    dependencyNode.appendNode('scope', "runtime")
                }

                if (depsNode.children().size() == 0) {
                    asNode().remove(depsNode)
                }
            }
        }
    }
}

artifactory {
    contextUrl = "https://artifactory.gz.cvte.cn/artifactory"
    publish {
        repository {
            repoKey = Boolean.valueOf(System.getProperty("snapshot")) ? "SR_maven_snapshots_local" : "SR_maven_releases_local"
            username = System.getProperty("username")
            password = System.getProperty("password")
        }
        defaults {
            publications('mavenJava')
            publishArtifacts = true
            publishPom = true
            properties = ['gitlab_url': GITLAB_URL, 'vcs.revision': System.getProperty("vcs")]
        }
    }
}

artifacts {
    archives sourcesJar
}
